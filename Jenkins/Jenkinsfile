pipeline {
    agent any

    tools {
        nodejs 'NodeJS_18'      // Назва NodeJS інструмента у Jenkins > Global Tools
        jdk 'OpenJDK_11'        // Назва JDK 11 інструмента
    }

    environment {
        CI = 'true'
        SONARQUBE_ENV = 'SonarQubeServer' // Назва налаштованого SonarQube серверу в Jenkins
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/your-user/your-repo.git'
            }
        }

        stage('Frontend: Install & Lint') {
            steps {
                dir('frontend') {
                    sh 'npm ci'
                    sh 'npx prettier --check .'
                    sh 'npx eslint . --ext .js,.jsx'
                }
            }
        }

        stage('Frontend: Test & Build') {
            steps {
                dir('frontend') {
                    sh 'npm test -- --watchAll=false'
                    sh 'npm run build'
                }
            }
        }

        stage('Backend: Build & Checkstyle') {
            steps {
                dir('backend') {
                    sh './gradlew build checkstyleMain'
                }
            }
        }

        stage('Backend: Test') {
            steps {
                dir('backend') {
                    sh './gradlew test'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv("${SONARQUBE_ENV}") {
                    dir('backend') {
                        sh './gradlew sonarqube -Dsonar.projectKey=your-backend-key -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_AUTH_TOKEN'
                    }
                }
            }
        }
    }

    post {
        success {
            echo '✅ Успішно перевірено frontend і backend з SonarQube'
        }
        failure {
            echo '❌ Помилка під час перевірки чи аналізу'
        }
    }
}
