pipeline {
    agent any

    tools {
        jdk 'jdk11'
        nodejs 'nodejs-lts'  // якщо є NodeJS плагін у Jenkins
    }

    environment {
        GRADLE_USER_HOME = "${env.WORKSPACE}/.gradle"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Frontend Build') {
            dir('frontend') {
                steps {
                    sh 'npm ci'
                    sh 'npm run lint' // якщо є
                    sh 'npm test'
                    sh 'npm run build'
                }
            }
        }

        stage('Backend Check & Build') {
            steps {
                sh './gradlew checkstyleMain'
                sh './gradlew test jacocoTestReport'
                sh './gradlew build -x test'
            }
        }

        stage('Liquibase Update') {
            steps {
                sh './gradlew update'
            }
        }

        stage('Docker Build & Push') {
            steps {
                sh 'docker build -t myapp-backend:latest .'
                dir('frontend') {
                    sh 'docker build -t myapp-frontend:latest .'
                }
                withCredentials([usernamePassword(credentialsId: 'docker-hub', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker push myapp-backend:latest
                        docker push myapp-frontend:latest
                    '''
                }
            }
        }
    }
}
